AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  This serverless app sets up an AWS CodePipeline Pipeline as a CD solution for a GitHub-based SAM project. Once setup, every time the specified GitHub repository branch is updated, the change will flow through the CodePipeline pipelines.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: aws-sam-codepipeline-cd
    Description: >-
      This serverless app sets up an AWS CodePipeline Pipeline as a CD solution for a GitHub-based SAM project. Once setup, every time the specified GitHub repository branch is updated, the change will flow through the CodePipeline pipeline.

Outputs:
  ArtifactsBucketArn:
    Value: !GetAtt Artifacts.Arn
  ArtifactsBucketName:
    Value: !Ref Artifacts
  PipelineName:
    Value: !Ref Pipeline
  PipelineVersion:
    Value: !GetAtt Pipeline.Version

Parameters:
  ComputeType:
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
    Default: BUILD_GENERAL1_SMALL
    Description: AWS CodeBuild project compute type.
    Type: String
  EnvironmentType:
    AllowedValues:
      - LINUX_CONTAINER
      - WINDOWS_CONTAINER
    Default: LINUX_CONTAINER
    Description: Environment type used by AWS CodeBuild. See the documentation for details (https://docs.aws.amazon.com/codebuild/latest/userguide/create-project.html#create-project-cli).
    Type: String
  SourceCodeProvider:
    Type: String
    Description: Location of your source code repository
    Default: GitHub
  GitHubOAuthToken:
    Description: OAuth token used by AWS CodePipeline to connect to GitHub
    NoEcho: true
    Type: String
    Default: ''
  GitHubOwner:
    Description: GitHub username owning the repo
    Type: String
    Default: ''
  GitHubRepo:
    Description: GitHub repo name
    Type: String
    Default: ''
  GitHubBranch:
    Description: GitHub repo branch name. It defaults to master if not specified.
    Type: String
    Default: master
  DeployParameterOverrides:
    Description: Parameter overrides for the deploy stage
    Type: String
    Default: '{}'
  DeployStackName:
    Description: The stack name for the deploy stage
    Type: String
    Default: ''
  DeployRoleName:
    Description: >-
      The IAM role name to deploy the CloudFormation stack. This role needs to be configured to allow
      cloudformation.amazonaws.com to assume it. Deploy stage will not be added if not specified.
    Type: String
    Default: ''
  BuildSpecFilePath:
    Description: >-
      Relative BuildSpec file path for build stage. For more information, see https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
    Type: String
    Default: 'buildspec.yaml'

Conditions:
  HasDeployStage:
    !Not [!Equals [!Ref DeployRoleName, '']]
  UseGitHub:
    !Equals [!Ref SourceCodeProvider, 'GitHub']

Rules:
  ValidateGitHub:
    RuleCondition: !Equals [!Ref SourceCodeProvider, 'GitHub']
    Assertions:
      - Assert: !Not [!Equals [!Ref GitHubOwner, '']]
        AssertDescription: "GitHubOwner must be specified when SourceCodeProvider is GitHub"
      - Assert: !Not [!Equals [!Ref GitHubRepo, '']]
        AssertDescription: "GitHubRepo must be specified when SourceCodeProvider is GitHub"
      - Assert: !Not [!Equals [!Ref GitHubOAuthToken, '']]
        AssertDescription: "GitHubOAuthToken must be specified when SourceCodeProvider is GitHub"
      - Assert: !Not [!Equals [!Ref GitHubBranch, '']]
        AssertDescription: "GitHubBranch must be specified when SourceCodeProvider is GitHub"

Resources:
  Artifacts:
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
    Type: AWS::S3::Bucket
  ArtifactsPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket:
        Ref: Artifacts
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Principal:
              Service:
                - 'serverlessrepo.amazonaws.com'
            Resource:
              !Sub '${Artifacts.Arn}/*'
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref Artifacts
        Type: S3
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
              - Name: GitHubSource
                ActionTypeId:
                  Category: Source
                  Owner: ThirdParty
                  Provider: GitHub
                  Version: "1"
                Configuration:
                  Owner: !Ref GitHubOwner
                  OAuthToken: !Ref GitHubOAuthToken
                  Repo: !Ref GitHubRepo
                  Branch: "master"
                  PollForSourceChanges: false
                OutputArtifacts:
                  - Name: "checkout"
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: "checkout"
              OutputArtifacts:
                - Name: BuildArtifact
        - !If
          - HasDeployStage
          - Name: Deploy
            Actions:
              - Name: CreateChangeSet
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: '1'
                InputArtifacts:
                  - Name: BuildArtifact
                Configuration:
                  ActionMode: CHANGE_SET_REPLACE
                  Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                  ParameterOverrides: !Ref DeployParameterOverrides
                  RoleArn: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${DeployRoleName}
                  StackName: !Ref DeployStackName
                  TemplatePath: "BuildArtifact::packaged.yaml"
                  ChangeSetName: !Sub a-${DeployStackName}-Deploy
                RunOrder: 1
              - Name: ExecuteChangeSet
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: '1'
                Configuration:
                  ActionMode: CHANGE_SET_EXECUTE
                  StackName: !Ref DeployStackName
                  ChangeSetName: !Sub a-${DeployStackName}-Deploy
                RunOrder: 2
          - !Ref AWS::NoValue
       
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub "Used by CodePipeline. Created by CloudFormation ${AWS::StackId}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: s3-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${Artifacts}/*
                  - !Sub arn:aws:s3:::sam-artifacts-sou1/*
              - Effect: Allow
                Action:
                  - "s3:ListBucket"
                  - "s3:GetBucketPolicy"
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${Artifacts}
                  - !Sub arn:aws:s3:::sam-artifacts-sou1
        - PolicyName: codebuild-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - !GetAtt BuildProject.Arn
        - !If
          - HasDeployStage
          - PolicyName: deploy-cloudformation-access
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "cloudformation:DescribeStacks"
                    - "cloudformation:CreateChangeSet"
                    - "cloudformation:ExecuteChangeSet"
                    - "cloudformation:DescribeChangeSet"
                  Resource:
                    - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${DeployStackName}/*
          - !Ref AWS::NoValue
        - !If
          - HasDeployStage
          - PolicyName: deploy-iam-access
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "iam:PassRole"
                  Resource:
                    - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${DeployRoleName}
          - !Ref AWS::NoValue
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt BuildProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref BuildSpecFilePath
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: !Ref ComputeType
        Image: 'aws/codebuild/standard:2.0'
        Type: !Ref EnvironmentType
        EnvironmentVariables:
          - Name: PACKAGE_BUCKET
            Value: !Ref Artifacts
  GitHubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Condition: UseGitHub
    Properties:
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref Pipeline
      TargetAction: GitHubSource
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true
  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub codebuild-access-${AWS::StackName}
      Roles:
        - !Ref BuildProjectRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
          - Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${Artifacts}/*
              - !Sub arn:aws:s3:::sam-artifacts-sou1/*
          - Action:
              - s3:ListBucket
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${Artifacts}
              - !Sub arn:aws:s3:::sam-artifacts-sou1
  BuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub "Used in CodeBuild project. Created by CloudFormation ${AWS::StackId}"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /service-role/
      ManagedPolicyArns:
        - !Sub arn:aws:iam::aws:policy/IAMFullAccess
        - !Sub arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - !Sub arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
        - !Sub arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - !Sub arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - !Sub arn:aws:iam::aws:policy/AmazonS3FullAccess
  DeployStagePolicy:
    Condition: HasDeployStage
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub deploy-stage-access-${AWS::StackName}
      Roles:
        - !Ref DeployRoleName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${Artifacts}/*
              - !Sub arn:aws:s3:::sam-artifacts-sou1
